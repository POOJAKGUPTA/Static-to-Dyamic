c
@activities
activity
user_traking.trackable_type.email
@activities.trackable
@activities
c
user_traking.trackable_type.email
user_traking.trackable_type.first_name
user_traking.trackable_type
user_traking.first_name
user_traking
activity
c
activity
if activity.trackable_type="User"
activity
c
activity
if activity.trackable_type="User"
activity
if activity.trackable_type="User"
activity
c
cc
c
cc
c
c\
activity.trackable.first_name
activity.trackable_type
activity.key
activity.trackable.first_name
activity.trackable_type
activity
activity.inspect
activity.inspet
activity
c
activity.key
activity.trackable_type
activity
c
activity.key
activity.key\
activity.trackable_type
activity
c
activity.id
activity.key
activity.owner
activity
activity.owner_type
activity.owner_typwe
activity.trackable.owner_type
activity.trackable.owner_typwe
activity.trackable.owner_typw
activity.trackable.
activity.trackable.id
activity.trackable
activity
c
activity.trackable.first_name
activity.trackable.name
activity.trackable_id
activity.trackable_type
activity.trackable.type
activity.trackable
activity.trackable.id
activity
activity.trackable
activity.key
activity.trackable.key
activity.trackable.email
activity.trackable.id
activity.trackable
activity.trackable.user
activity.trackable
activity.trackable.user
activity.trackable
activity
Cart.total
c
activity.owner
c
activity.owner
c
activity.trackable.first_name
activity.trackable.name
activity.trackable
activity.trackable.user
activity.trackable
activity
c
continue
current_user.id
current_user
c
params[:updating_user_id]
params[:asheesh][:my_first_name]
params[:asheesh]
params[:_method]
params
c
 current_wishlist.wishlist_items
 current_wishlist
c
current_wishlist.wishlist_items
 @current_wishlist_product
current_wishlist.wishlist_items
redirect_to "/commerce/wishlist"
c
redirect_to "/commerce/wishlist"
current_wishlist.add_item_to_wishlist(@product)
@product
@product= ProductList.find(params[:id])
@product= ProductList.find(params[:id]
@product
params
c
<%end%>
<%= link_to "back" , commerce_products_grid_path %>
c
charge_id
@charge.id
@charge.balance_transaction
@charge
n
charge
c
  description: "#{current_user.email} has purchased product  ",c
  description: "#{current_user.email} has purchased product  ",currency: 'usd',source: params[:stripeToken],description: "#{current_user.email} has purchased product  "})
  description: "#{current_user.email} has purchased product  ",
  source: params[:stripeToken], # obtained with Stripe.js
  currency: 'usd',
charge = Stripe::Charge.create({amount: cart.total*100,
charge= Stripe::Charge.create({  description: "#{current_user.email} has purchased product  ",
  description: "#{current_user.email} has purchased product  ",
  source: params[:stripeToken], # obtained with Stripe.js
  currency: 'usd',
  amount: cart.total*100,
charge = Stripe::Charge.create({
charge
byebug
charge = Stripe::Charge.create({
  description: "#{current_user.email} has purchased product  ",
  source: params[:stripeToken], # obtained with Stripe.js
  currency: 'usd',
  amount: cart.total*100,
charge = Stripe::Charge.create({
charge
c
charge
uo9yuop
yoiyoi
duktyi
charge
charge = Stripe::Charge.create({amount: cart.total*100,currency: 'usd',source: params[:stripeToken],description: "#{current_user.email} has purchased product  "})
charge = Stripe::Charge.create
charge
c
Cart.map{|a| a.total}
Cart.total
Cart
Cart.last.cart_items.map{|ci| ci.subtotal}.sum
Cart.last.cart_items.map{|ci| ci.subtotal}.sum\
Cart.last.cart_items.map{|ci| ci.subtotal}
Cart.last.cart_items.map{|ci| ci.subtotal\}
Cart.last.cart_items
Cart.last
current_cart.class.name
current_cart.class_name
current_cart.classname
current_cart.classname\
current_cart.class
current_cart
c
 @current_cart_product = current_cart.cart_items
@current_cart_product
current_cart.cart_items.CartItem
current_cart.cart_items
current_cart.cart_items.count
current_cart.cart_items
current_cart.cart_items.product_list.name
current_cart.cart_items.where
current_cart.cart_items.CartItem
current_cart.cart_items.product_id
current_cart.cart_items
current_cart.cart
current_cart.cart_items.product_list
current_cart.cart_items
current_cart.add_item(@product)
current_cart.add_item
current_cart
curreny_cart
@product = ProductList.find(params[:id])
@product
params
c
subtotal
c
current_cart.cart_items
c
params[:id]
params
params\
@product
@current_cart_product
c
product_ids = current_cart.cart_items.first.product_list.product_name
product_ids = current_cart.cart_items.first.product_list
product_ids = current_cart.cart_items.first
product_ids = current_cart.cart_items
product_ids = current_cart.cart_items.map{|ci| ci.product_list}
current_cart.cart_items
product_ids = current_cart.cart_items.map(&:product_list)
product_ids = current_cart.cart_items.map(&:product_id)
product_ids = current_cart.cart_items.map(&:cart_id)
ProductList.where(id: product_ids)
product_ids
product_ids = current_cart.cart_items.map(&:product_id)
current_cart.cart_items.map(&:product_id)
current_cart.cart_items
current_cart
current_user.current_cart
current_user
